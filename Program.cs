using System.Linq.Expressions;
using Telegram.Bot;
using Telegram.Bot.Exceptions;
using Telegram.Bot.Polling;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.ReplyMarkups;
//–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ 
//–¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ @sielom_paralegal_bot
class Program //–Ω–∞—á–∞–ª–æ –ø—Ä–æ–≥—Ä–∞–º–º—ã
{

    private static ITelegramBotClient? _botClient;
    private static ReceiverOptions? _receiverOptions;
    static async Task Main()
    {
        _botClient = new TelegramBotClient("7930979593:AAFfWN4lmMYZFmJoEUqTIv--DRWLZOpaQP4"); /* –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ç–µ—Å—Ç–∏—Ç—å –±–æ—Ç–∞, —Ç–æ –∏–∑–º–µ–Ω–∏—Ç–µ –∫–ª—é—á. –ö–ª—é—á –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤ @BotFather(–ø—Ä–æ–ø–∏—à–∏—Ç–µ /newbot, –ø–æ—Å–ª–µ name –±–æ—Ç–∞, –∞ –¥–∞–ª—å—à–µ –∏ —Ç–µ–≥ (@test_bot –∏–ª–∏ —á–µ —Ç–æ –ø–æ–¥–æ–±–Ω–æ–µ) —É–¥–∞—á–∏)*/
        _receiverOptions = new ReceiverOptions();

        using var cts = new CancellationTokenSource();

        _botClient.StartReceiving(UpdateHandler, ErrorHandler, _receiverOptions, cts.Token);

        var me = await _botClient.GetMeAsync();
        Console.WriteLine($"{me.FirstName} –∑–∞–ø—É—â–µ–Ω!"); /* –±–æ—Ç –ø–∏—à–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å–∫—É –∏–º—è –∏ —Ç–æ —á—Ç–æ –æ–Ω –∑–∞–ø—É—â–µ–Ω*/
        await Task.Delay(-1);
    }

    static async Task<Task> ErrorHandler(ITelegramBotClient botClient, Exception error, CancellationToken cancellationToken) /*—Ñ—É–Ω–∫—Ü–∏—è —Å –æ—à–∏–±–∫–∞–º–∏(API –∫–ª—é—á–∞)*/
    {
        var ErrorMessage = error switch
        {
            ApiRequestException apiRequestException
            => $"Telegram API Error:n[{apiRequestException.ErrorCode}]n{apiRequestException.Message}",
            _ => error.ToString()
        };
        Console.WriteLine(ErrorMessage);
        return Task.CompletedTask;
    }
    private static async Task UpdateHandler(ITelegramBotClient botClient, Update update, CancellationToken cancellationToken) // –û–°–ù–û–í–ù–ê–Ø –ß–ê–°–¢–¨ –ë–û–¢–ê
    {
        try
        {
            switch (update.Type)
            {
                case UpdateType.Message:
                    {

                        var message = update.Message;
                        var user = message?.From;
                        var chat = message?.Chat;

                        switch (message?.Type)
                        {
                            case MessageType.Text:
                                {
                                    Console.WriteLine($"{user?.FirstName} ({user?.Id}) –Ω–∞–ø–∏—Å–∞–ª(–∞) —Å–æ–æ–±—â–µ–Ω–∏–µ: {message?.Text}"); /*–≠—Ç–æ –≤—ã–≤–æ–¥–∏—Ç —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç*/
                                    if (message.Text == "/start") /*–û, –∏–Ω–ª–∞–π–Ω –∫–µ–π–±–æ—Ä–¥. –≠—Ç–∞ –∫–æ—Ä–æ—á–µ –∫–Ω–æ–ø–∫–∞ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, –¥–∞–ª—å—à–µ –±—É–¥–µ—Ç –ø—Ä–æ–ø–∏—Å–∞–Ω–æ –∫–∞–∫ –ø—Ä–∏–º–µ–Ω—è—Ç—å*/
                                    {
                                        InlineKeyboardMarkup firstmenu = new(new[]
                                        {
                                            new []  {InlineKeyboardButton.WithCallbackData(text: "–í–æ–π—Ç–∏ –≤ –±–æ—Ç–∞", callbackData: "auth")},
                                        }); /*–≠—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏. –ò –µ—â—ë Callback - –°–ê–ú–ê–Ø –í–ê–ñ–ù–ê–Ø –í–ï–©–¨ –í –ö–ù–û–ü–ö–ê–•*/
                                        await botClient.SendTextMessageAsync(chat.Id, "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è!", replyMarkup: firstmenu);
                                        return;
                                    }

                                    return;
                                }
                            case MessageType.Contact: //–ö–µ–π—Å –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞
                                {
                                    var contact = message?.Contact;
                                    try
                                    {
                                        await botClient.DeleteMessageAsync(chatId: message.Chat.Id, messageId: message.MessageId - 1, cancellationToken: cancellationToken);
                                    }
                                    catch (Exception e)
                                    {
                                        await botClient.DeleteMessageAsync(chatId: message.Chat.Id, messageId: message.MessageId - 1, cancellationToken: cancellationToken);
                                    }
                                    Console.WriteLine($"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user?.FirstName} –ø–æ–¥–µ–ª–∏–ª—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π: –í–æ—Ç –µ–≥–æ –Ω–æ–º–µ—Ä:({contact?.PhoneNumber})");
                                    InlineKeyboardMarkup mainmenu = new(new[]
                                    {new []  {InlineKeyboardButton.WithCallbackData(text: "üë§–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callbackData: "profile")}, /*–¢—É—Ç –∏ —Ç–∞–∫ –ø–æ–Ω—è—Ç–Ω–æ, callbackData: "mainmenu" - –≤–µ—Ä–Ω—ë—Ç –≤–∞—Å –≤ —ç—Ç—É –º–µ–Ω—é—à–∫—É, –û–ë–†–ê–¢–ò–¢–ï –í–ù–ò–ú–ê–ù–ò–ï –ù–ê –ù–ê–ó–í–ê–ù–ò–Ø!! */
                                    new []  {InlineKeyboardButton.WithCallbackData(text: "üìù–¢–µ–∫—É—â–∞—è —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å", callbackData: "usp")},
                                    new []  {InlineKeyboardButton.WithWebApp("üóì–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", new WebAppInfo() {Url = "https://sielom.ru/schedule"})},
                                    new []  {InlineKeyboardButton.WithCallbackData(text: "üìñ–ó–∞—á–µ—Ç–Ω–∞—è –∫–Ω–∏–∂–∫–∞", callbackData: "zach")},
                                    new []  {InlineKeyboardButton.WithCallbackData(text: "üì¨–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", callbackData: "predloz")},
                                    new []  {InlineKeyboardButton.WithCallbackData(text: "‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callbackData: "settings")},
                                    new []  {InlineKeyboardButton.WithCallbackData(text: "üíî–í—ã—Ö–æ–¥", callbackData: "exit")}
                                    });
                                    try
                                    {
                                        await botClient.EditMessageTextAsync(chat.Id, messageId: message.MessageId, $"–ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?", replyMarkup: mainmenu);
                                    }
                                    catch (Exception e)
                                    {
                                        await botClient.SendTextMessageAsync(chat.Id, $"–ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?", replyMarkup: mainmenu);
                                    }
                                }
                                return;
                        }

                    }
                    return;


                case UpdateType.CallbackQuery: /*–°–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —á—Ç–æ —Ç—É—Ç –µ—Å—Ç—å >:)*/
                    {
                        InlineKeyboardMarkup back = new(new[]
                        {
                            new []  {InlineKeyboardButton.WithCallbackData(text: "‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callbackData: "mainmenu")}
                        }); /*–≠—Ç–æ –∫–Ω–æ–ø–∫–∞ –∫–æ—Ç–æ—Ä–∞—è –≤–µ—Ä–Ω—ë—Ç —Ç–µ–±—è –Ω–∞–∑–∞–¥ –≤ –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—é */
                        
                        var callbackQuery = update.CallbackQuery;
                        var message = callbackQuery?.Message;
                        var user = callbackQuery?.From;
                        var chat = callbackQuery?.Message?.Chat;
                        var contact = message?.Contact;

                        if (message?.Text != null || user != null || chat != null)
                        {
                            Console.WriteLine($"{user?.FirstName} ({user.Id}) –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É: {callbackQuery?.Data}"); /*–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É —Ç–æ –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ –Ω–∞ —á—Ç–æ –æ–Ω –Ω–∞–∂–∞–ª –∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*/
                        }

                        bool firstMessageReceived = false;

                        if (update.CallbackQuery != null && update.CallbackQuery.Data == "predloz") /*–û–±—è–∑–∞—Ç–µ–ª—å–µ–Ω—ã–µ —É—Å–ª–æ–≤–∏—è, –Ω–æ –æ–Ω–∏ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±—É–¥—É—Ç —Ç–∫. –Ω–µ —É—Å–ø–µ–ª —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π(–∫—Ç–æ –ø–æ—á–∏–Ω–∏—Ç –¥–∞–º 50 —Ä—É–±–ª–µ–π)*/
                        {
                            await botClient.EditMessageTextAsync(chat.Id, messageId: message.MessageId, "–ù–∞–ø–∏—à–∏—Ç–µ –∫–∞–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ–ª—É—á–∏—Ç—å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ?", replyMarkup: back);
                        }

                        if (update.Message != null && !firstMessageReceived)
                        {
                            firstMessageReceived = true;
                        }
                        if (update.Message != null && update.Message.Text != null && firstMessageReceived)
                        {
                            await botClient.EditMessageTextAsync(chat.Id, messageId: message.MessageId, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!", replyMarkup: back);
                        }

                        switch (callbackQuery?.Data) //—ç—Ç–æ —Å–≤–∏—Ç—á –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ callback
                        {
                            case "mainmenu":
                                {
                                    InlineKeyboardMarkup mainmenu = new(new[]
                                    {new []  {InlineKeyboardButton.WithCallbackData(text: "üë§–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callbackData: "profile")}, /*–¢—É—Ç –∏ —Ç–∞–∫ –ø–æ–Ω—è—Ç–Ω–æ, callbackData: "mainmenu" - –≤–µ—Ä–Ω—ë—Ç –≤–∞—Å –≤ —ç—Ç—É –º–µ–Ω—é—à–∫—É, –û–ë–†–ê–¢–ò–¢–ï –í–ù–ò–ú–ê–ù–ò–ï –ù–ê –ù–ê–ó–í–ê–ù–ò–Ø!! */
                                    new []  {InlineKeyboardButton.WithCallbackData(text: "üìù–¢–µ–∫—É—â–∞—è —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å", callbackData: "usp")},
                                    new []  {InlineKeyboardButton.WithWebApp("üóì–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", new WebAppInfo() {Url = "https://sielom.ru/schedule"})},
                                    new []  {InlineKeyboardButton.WithCallbackData(text: "üìñ–ó–∞—á–µ—Ç–Ω–∞—è –∫–Ω–∏–∂–∫–∞", callbackData: "zach")},
                                    new []  {InlineKeyboardButton.WithCallbackData(text: "üì¨–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", callbackData: "predloz")},
                                    new []  {InlineKeyboardButton.WithCallbackData(text: "‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callbackData: "settings")},
                                    new []  {InlineKeyboardButton.WithCallbackData(text: "üíî–í—ã—Ö–æ–¥", callbackData: "exit")}
                                    });
                                    await botClient.EditMessageTextAsync(chat.Id, messageId: message.MessageId, $"–ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?", replyMarkup: mainmenu);
                                    return;
                                };
                            case "profile":
                                {
                                    await botClient.EditMessageTextAsync(chat.Id, messageId: message.MessageId, $"–í—ã: {user.FirstName}\n\n–í–∞—à —Ç–µ–≥: {user.Username}\n\n–í–∞—à ID: {user.Id}\n\n–ù–∞—à ID —á–∞—Ç–∞: {chat.Id}", replyMarkup: back);
                                    return;
                                }
                            case "usp":
                                {
                                    await botClient.EditMessageTextAsync(chat.Id, messageId: message.MessageId, "–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã.\n\n–ü—Ä–µ–¥–º–µ—Ç—ã –ø–æ–∫–∞–∑–∞–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n  –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª - –ü—Ä–µ–¥–º–µ—Ç\n –Ω/–æ -  –æ—Ü–µ–Ω–∫–∏ –µ—â—ë –Ω–µ –≤—ã—Å—Ç–∞–≤–ª—è–ª–∏—Å—å\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤–∞—à—É —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å –ø–æ –Ω–µ–º—É:", replyMarkup: back);
                                    return;
                                }
                            case "zach":
                                {
                                    await botClient.EditMessageTextAsync(chat.Id, messageId: message.MessageId, "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞ –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—á–µ—Ç–∞—Ö:", replyMarkup: back);
                                    return;
                                }
                            case "settings":
                                {
                                    InlineKeyboardMarkup setmenu = new(new[]
                                    {new []  {InlineKeyboardButton.WithCallbackData(text: "üë®‚Äçüë©‚Äçüëß–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å", callbackData: "rod_control")},
                                        new []  {InlineKeyboardButton.WithCallbackData(text: "‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callbackData: "mainmenu")}});
                                    await botClient.EditMessageTextAsync(chat.Id, messageId: message.MessageId, $"–ß—Ç–æ –±—É–¥–µ–º –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å?", replyMarkup: setmenu);
                                    return;
                                }
                            case "rod_control":
                                {
                                    InlineKeyboardMarkup rodmenu = new(new[]
                                    {new []  {InlineKeyboardButton.WithCallbackData(text: "‚ûïüë§–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä–∞ —Ä–æ–¥–∏—Ç–µ–ª–µ–π", callbackData: "add_rod")},
                                        new []  {InlineKeyboardButton.WithCallbackData(text: "‚ûñüë§–û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤ —Ä–æ–¥–∏—Ç–µ–ª–µ–π", callbackData: "clear_rod")},
                                        new []  {InlineKeyboardButton.WithCallbackData(text: "‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º‚öôÔ∏è", callbackData: "settings")},
                                        new []  {InlineKeyboardButton.WithCallbackData(text: "‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callbackData: "mainmenu")},});
                                    await botClient.EditMessageTextAsync(chat.Id, messageId: message.MessageId, $"–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤:", replyMarkup: rodmenu);
                                    return;
                                }
                            case "add_rod": // –≤–∏–∑—É–∞–ª—å–Ω–æ–µ "–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ"
                                {
                                    InlineKeyboardMarkup add_rodi = new(new[]
                                    {new []  {InlineKeyboardButton.WithCallbackData(text: "‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º‚öôÔ∏è", callbackData: "settings")}});
                                    await botClient.EditMessageTextAsync(chat.Id, messageId: message.MessageId, "–°–µ–π—á–∞—Å –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –æ–¥–Ω–æ–≥–æ –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª–µ–π, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–∫—Ä–µ–ø–æ—á–∫—É –∏ –≤—ã–±—Ä–∞–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –≤ –º–µ–Ω—é. –í–Ω–∏–º–∞–Ω–∏–µ! –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–∏—à—å 2 –∫–æ–Ω—Ç–∞–∫—Ç–∞.", replyMarkup: add_rodi);
                                    return;
                                }
                            case "clear_rod": // –Ω–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞–ª –±–¥, —Ç–∞–∫ —á—Ç–æ –º–Ω–µ –ø–æ—Ñ–∏–≥
                                {
                                    await botClient.EditMessageTextAsync(chat.Id, messageId: message.MessageId, "–ë–¥ –æ—Ç—Å—Ç—É—Ç—Å—Ç–≤—É–µ—Ç", replyMarkup: back);
                                    return;
                                }

                            case "auth": // –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–∞—â–µ
                                {
                                    await botClient.DeleteMessageAsync(chatId: message.Chat.Id, messageId: message.MessageId, cancellationToken: cancellationToken);
                                    ReplyKeyboardMarkup authorization = new(new[]
                                    {
                                    KeyboardButton.WithRequestContact("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º!")
                                    })
                                    { ResizeKeyboard = true, OneTimeKeyboard = true };

                                    await botClient.SendTextMessageAsync(chat.Id, $"–Ø –Ω–µ –º–æ–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º –ø–æ–∫–∞ –Ω–µ —É–∑–Ω–∞—é –∫—Ç–æ –∏—Ö –ø—Ä–æ—Å–∏—Ç.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º —á—Ç–æ –±—ã —è –º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—Å –ø–æ –≤–∞—à–µ–º—É –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n\n–ö–Ω–æ–ø–∫–∞ —Å–Ω–∏–∑—É –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π, –µ—Å–ª–∏ —É –≤–∞—Å –µ–µ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üéõ ", replyMarkup: authorization);
                                    break;
                                }

                            case "exit": // –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥–∏
                                {
                                    InlineKeyboardMarkup firstmenu = new(new[]
                                    { new []  {InlineKeyboardButton.WithCallbackData(text: "–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è", callbackData: "auth")},});
                                    await botClient.EditMessageTextAsync(chat.Id, messageId: message.MessageId, "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è!", replyMarkup: firstmenu);
                                    return;
                                }
                        }
                        break;
                    }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }
}// –Ω—É –∏ –≤—Å–µ, –∫–æ–Ω–µ—Ü. –ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã @mopcu4



